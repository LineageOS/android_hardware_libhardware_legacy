From 1539de53bc9eafb6d3ff7d22edf064004451b813 Mon Sep 17 00:00:00 2001
From: streambinder <davidepucci@hiddenhost.org>
Date: Fri, 20 Feb 2015 15:07:24 +0100
Subject: [PATCH] patch

Change-Id: I559d63de22128b857b96de02acc3ced626517e6a
---
 audio/AudioPolicyCompatClient.cpp              | 9 +++++++++
 audio/AudioPolicyCompatClient.h                | 4 ++++
 audio/AudioPolicyManagerBase.cpp               | 6 ++++++
 include/hardware_legacy/AudioPolicyInterface.h | 6 ++++++
 4 files changed, 25 insertions(+)

diff --git a/audio/AudioPolicyCompatClient.cpp b/audio/AudioPolicyCompatClient.cpp
index 9d02d98..3ceab58 100644
--- a/audio/AudioPolicyCompatClient.cpp
+++ b/audio/AudioPolicyCompatClient.cpp
@@ -85,10 +85,19 @@ status_t AudioPolicyCompatClient::closeInput(audio_io_handle_t input)
     return mServiceOps->close_input(mService, input);
 }
 
+#ifndef MR0_AUDIO_BLOB
 status_t AudioPolicyCompatClient::invalidateStream(AudioSystem::stream_type stream)
 {
     return mServiceOps->invalidate_stream(mService, (audio_stream_type_t)stream);
 }
+#else
+status_t AudioPolicyCompatClient::setStreamOutput(AudioSystem::stream_type stream,
+                                                audio_io_handle_t output)
+{
+    return mServiceOps->set_stream_output(mService, (audio_stream_type_t)stream,
+                                            output);
+}
+#endif
 
 status_t AudioPolicyCompatClient::moveEffects(int session, audio_io_handle_t srcOutput,
                                                audio_io_handle_t dstOutput)
diff --git a/audio/AudioPolicyCompatClient.h b/audio/AudioPolicyCompatClient.h
index 19f76e1..b2c63a7 100644
--- a/audio/AudioPolicyCompatClient.h
+++ b/audio/AudioPolicyCompatClient.h
@@ -56,7 +56,11 @@ public:
                                         audio_format_t *pFormat,
                                         audio_channel_mask_t *pChannelMask);
     virtual status_t closeInput(audio_io_handle_t input);
+#ifndef MR0_AUDIO_BLOB
     virtual status_t invalidateStream(AudioSystem::stream_type stream);
+#else
+    virtual status_t setStreamOutput(AudioSystem::stream_type stream, audio_io_handle_t output);
+#endif
     virtual status_t moveEffects(int session,
                                  audio_io_handle_t srcOutput,
                                  audio_io_handle_t dstOutput);
diff --git a/audio/AudioPolicyManagerBase.cpp b/audio/AudioPolicyManagerBase.cpp
index 5096f95..b3b3730 100644
--- a/audio/AudioPolicyManagerBase.cpp
+++ b/audio/AudioPolicyManagerBase.cpp
@@ -2351,7 +2351,13 @@ void AudioPolicyManagerBase::checkOutputForStrategy(routing_strategy strategy)
         // Move tracks associated to this strategy from previous output to new output
         for (int i = 0; i < (int)AudioSystem::NUM_STREAM_TYPES; i++) {
             if (getStrategy((AudioSystem::stream_type)i) == strategy) {
+#ifndef MR0_AUDIO_BLOB
                 mpClientInterface->invalidateStream((AudioSystem::stream_type)i);
+#else
+                //FIXME see fixme on name change
+                mpClientInterface->setStreamOutput((AudioSystem::stream_type)i,
+                                                    dstOutputs[0] /* ignored */);
+#endif
             }
         }
     }
diff --git a/include/hardware_legacy/AudioPolicyInterface.h b/include/hardware_legacy/AudioPolicyInterface.h
index da03ee3..b076834 100644
--- a/include/hardware_legacy/AudioPolicyInterface.h
+++ b/include/hardware_legacy/AudioPolicyInterface.h
@@ -229,8 +229,14 @@ public:
     // for each output (destination device) it is attached to.
     virtual status_t setStreamVolume(AudioSystem::stream_type stream, float volume, audio_io_handle_t output, int delayMs = 0) = 0;
 
+#ifndef MR0_AUDIO_BLOB
     // invalidate a stream type, causing a reroute to an unspecified new output
     virtual status_t invalidateStream(AudioSystem::stream_type stream) = 0;
+#else
+    // FIXME ignores output, should be renamed to invalidateStreamOuput(stream)
+    // reroute a given stream type to the specified output
+    virtual status_t setStreamOutput(AudioSystem::stream_type stream, audio_io_handle_t output) = 0;
+#endif
 
     // function enabling to send proprietary informations directly from audio policy manager to audio hardware interface.
     virtual void setParameters(audio_io_handle_t ioHandle, const String8& keyValuePairs, int delayMs = 0) = 0;
-- 
2.1.0

